{"version":3,"file":"static/js/481.7e1d7603.chunk.js","mappings":"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","sources":["components/Photosessions.tsx","components/sliders/HorizontalSlider.tsx","components/sliders/HorizontalSliderPreview.tsx","components/sliders/Title.tsx","components/sliders/VerticalSlider.tsx","components/sliders/VerticalSliderPreview.tsx"],"sourcesContent":["//Photosessions.tsx\r\nimport { forwardRef, useRef, useState, useMemo, useCallback } from \"react\";\r\nimport { Splide } from \"@splidejs/splide\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { photosessionsHorizontal, photosessionsVertical } from \"../data/data\";\r\nimport HorizontalSlider, { getPerHorizontalPageValue } from './sliders/HorizontalSlider';\r\nimport VerticalSlider, { getPerVerticalPageValue } from './sliders/VerticalSlider';\r\nimport Title from './sliders/Title';\r\nimport SiteContainerBackground from './sliders/SiteContainerBackground';\r\nimport HorizontalSliderPreview from './sliders/HorizontalSliderPreview';\r\nimport VerticalSliderPreview from './sliders/VerticalSliderPreview';\r\n\r\nconst Photosessions = forwardRef<HTMLDivElement>((_, ref) => {\r\n  const { t } = useTranslation(\"Photosessions\");\r\n  const [selectedHorizontalSlide] = useState(0);\r\n  const [selectedVerticalSlide] = useState(0);\r\n  const splideInstanceRefHorizontal = useRef<Splide | null>(null);\r\n  const splideInstanceRefVertical = useRef<Splide | null>(null);\r\n  const slidersHorizontal = useMemo(() => (\r\n    photosessionsHorizontal\r\n      .map((photo) => photo?.img)\r\n      .filter((img): img is string => img !== undefined)\r\n  ), []);\r\n  const slidersVertical = useMemo(() => (\r\n    photosessionsVertical\r\n      .map((photo) => photo?.img)\r\n      .filter((img): img is string => img !== undefined)\r\n  ), []);\r\n\r\n  const handleHorizontalPreviewClick = useCallback((index: number) => {\r\n    if (splideInstanceRefHorizontal.current) {\r\n      splideInstanceRefHorizontal.current.go(index);\r\n    }\r\n  }, []);\r\n\r\n  const handleVerticalPreviewClick = useCallback((index: number) => {\r\n    if (splideInstanceRefVertical.current) {\r\n      splideInstanceRefVertical.current.go(index);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={ref}>\r\n    <SiteContainerBackground id={`category${4}`} data-testid=\"photosessions-wrapper\">\r\n      <Title text={t(\"photosessions_title\")} data-testid=\"photosessions_title\"/>\r\n      <div className=\"flex ssm:flex-wrap md:flex-nowrap \">\r\n        <div id=\"Vertical\" className=\"ssm:basis-1/1 sm:basis-1/3 md:basis-1/4 pr-2 ssm:pb-2 sm:pb-0 md:pb-0\">\r\n          <VerticalSlider photos={slidersVertical} selectedSlide={selectedVerticalSlide} setSplideInstance={splide => splideInstanceRefVertical.current = splide} autoplay={true} />\r\n          <VerticalSliderPreview photos={slidersVertical} selectedSlide={selectedVerticalSlide} onPreviewClick={handleVerticalPreviewClick} getPerPageValue={getPerVerticalPageValue} />\r\n        </div>\r\n        <div id=\"Horizontal\" className=\"ssm:basis-1/1 sm:basis-2/3 md:basis-3/4 lg:pt-0\">\r\n          <div>\r\n          <HorizontalSlider photos={slidersHorizontal} selectedSlide={selectedHorizontalSlide} setSplideInstance={splide => splideInstanceRefHorizontal.current = splide} autoplay={true} />\r\n          <HorizontalSliderPreview photos={slidersHorizontal} selectedSlide={selectedHorizontalSlide} onPreviewClick={handleHorizontalPreviewClick} getPerPageValue={getPerHorizontalPageValue} />\r\n        </div></div>\r\n      </div>\r\n    </SiteContainerBackground>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Photosessions;","//HorizontalSlider.tsx\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Splide } from \"@splidejs/splide\";\r\n\r\ninterface SliderProps {\r\n  photos: string[];\r\n  selectedSlide: number;\r\n  setSplideInstance: (splide: Splide | null) => void;\r\n  autoplay?: boolean;\r\n}\r\n\r\nexport const getPerHorizontalPageValue = () => {\r\n  if (window.innerWidth < 640) {\r\n    return 2;\r\n  } else if (window.innerWidth < 768) {\r\n    return 3;\r\n  } else if (window.innerWidth < 1024) {\r\n    return 4;\r\n  } else if (window.innerWidth < 1280) {\r\n    return 5;\r\n  } else {\r\n    return 6;\r\n  }\r\n};\r\n\r\nconst HorizontalSlider = ({ photos, selectedSlide, setSplideInstance, autoplay = true }: SliderProps) => {\r\n  const splideRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (splideRef.current) {\r\n      const splideInstance = new Splide(splideRef.current, {\r\n        type: \"slide\",\r\n        perPage: 1,\r\n        perMove: 1,\r\n        rewind: true,\r\n        arrows: true,\r\n        focus: \"center\",\r\n        pagination: true,\r\n        autoplay,\r\n        interval: 4000,\r\n      });\r\n  \r\n      setSplideInstance(splideInstance);\r\n  \r\n      splideInstance.on(\"mounted\", () => {\r\n        splideInstance.go(selectedSlide);\r\n      });\r\n  \r\n      splideInstance.mount();\r\n  \r\n      return () => {\r\n        splideInstance.destroy();\r\n      };\r\n    }\r\n  }, [selectedSlide, setSplideInstance, autoplay]);\r\n\r\n  return (\r\n    <section id=\"horizontal_thumbnail_carousel\" ref={splideRef} className=\"splide pb-2 pt-0.5\">\r\n      <div className=\"splide__track rounded-2xl\">\r\n        <ul className=\"splide__list\">\r\n          {photos.map((photo, slideIndex) => (\r\n            <li key={slideIndex} className={`splide__slide`} onContextMenu={(e) => e.preventDefault()}>\r\n              <img className=\"ssm:h-[440px] lg:h-[600px] xl:h-[700px] w-full object-cover duration-300 ease-out\" src={photo} alt={`Slide ${slideIndex}`} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HorizontalSlider;","//PreviewSliderHorizontal.tsx\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Splide } from \"@splidejs/splide\";\r\n\r\ninterface PreviewSliderHorizontalProps {\r\n  photos: string[];\r\n  selectedSlide: number;\r\n  onPreviewClick: (index: number) => void;\r\n  getPerPageValue: () => number;\r\n}\r\n\r\nconst HorizontalSliderPreview = ({ photos, selectedSlide, onPreviewClick, getPerPageValue }: PreviewSliderHorizontalProps) => {\r\n  const previewSplideRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (previewSplideRef.current) {\r\n      const previewSplide = new Splide(previewSplideRef.current, {\r\n        type: \"slide\",\r\n        perPage: getPerPageValue(),\r\n        gap: 5,\r\n        rewind: true,\r\n        pagination: false,\r\n        focus: \"center\",\r\n      });\r\n\r\n      previewSplide.on(\"mounted\", () => {\r\n        const slides = previewSplideRef.current!.querySelectorAll(\".splide__slide\");\r\n        slides.forEach((slide, index) => {\r\n          slide.addEventListener(\"click\", () => {\r\n            onPreviewClick(index);\r\n          });\r\n        });\r\n      });\r\n\r\n      previewSplide.mount();\r\n\r\n      const handleResize = () => {\r\n        const newPerPage = getPerPageValue();\r\n        previewSplide.go(selectedSlide);\r\n        previewSplide.options.perPage = newPerPage;\r\n        previewSplide.refresh();\r\n      };\r\n\r\n      window.addEventListener(\"resize\", handleResize);\r\n\r\n      return () => {\r\n        window.removeEventListener(\"resize\", handleResize);\r\n        previewSplide.destroy();\r\n      };\r\n    }\r\n  }, [selectedSlide, getPerPageValue, onPreviewClick]);\r\n\r\n  return (\r\n    <section id=\"thumbnail_carousel_preview\" ref={previewSplideRef} className=\"splide\">\r\n      <div className=\"splide__track\">\r\n        <ul className=\"splide__list\">\r\n          {photos.map((photo, previewIndex) => (\r\n            <li key={previewIndex} className={`splide__slide`} onClick={() => onPreviewClick(previewIndex)} onContextMenu={(e) => e.preventDefault()}>\r\n              <img className=\"h-[100px] w-full object-cover rounded-2xl\" src={photo} alt={`Preview ${previewIndex}`} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HorizontalSliderPreview;","// Title.tsx\r\nimport React from 'react';\r\n\r\ninterface TitleProps {\r\n  text: string;\r\n}\r\n\r\nconst Title: React.FC<TitleProps> = ({ text }) => (\r\n  <h3 className=\"flex justify-center mb-1 uppercase\" >\r\n    <span className=\"w-full justify-center ssm:py-2 sm:py-[0px] ssm:h-[29px] sm:h-[31px] md:h-[38px] flex text-white  bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 border-blue-600 shadow-lg shadow-blue-500/50 ssm:rounded-[12px] md:rounded-[15px]\">\r\n      <span className=\"text-white ssm:text-[22px] md:text-[26px] xl:text-[30px] ssm:-mt-[11px] sm:-mt-0.5 md:-mt-0.5 lg:-mt-0.5 xl:-mt-[4px] mx-4\">\r\n        {text}\r\n      </span>\r\n    </span>\r\n  </h3>\r\n);\r\n\r\nexport default Title;","// VerticalSlider.tsx\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Splide } from \"@splidejs/splide\";\r\n\r\ninterface SliderProps {\r\n  photos: string[];\r\n  selectedSlide: number;\r\n  setSplideInstance: (splide: Splide | null) => void;\r\n  autoplay?: boolean;\r\n}\r\n\r\nexport const getPerVerticalPageValue = () => {\r\n  if (window.innerWidth < 640) {\r\n    return 3;\r\n  } else if (window.innerWidth < 768) {\r\n    return 2;\r\n  } else if (window.innerWidth < 1024) {\r\n    return 2;\r\n  } else if (window.innerWidth < 1280) {\r\n    return 2;\r\n  } else {\r\n    return 3;\r\n  }\r\n};\r\n\r\nconst VerticalSlider = ({ photos, selectedSlide, setSplideInstance, autoplay = true }: SliderProps) => {\r\n  const splideRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (splideRef.current) {\r\n      const splideInstance = new Splide(splideRef.current, {\r\n        type: \"slide\",\r\n        perPage: 1,\r\n        perMove: 1,\r\n        gap: 10,\r\n        rewind: true,\r\n        arrows: true,\r\n        focus: \"center\",\r\n        autoplay,\r\n        interval: 3000,\r\n      });\r\n  \r\n      setSplideInstance(splideInstance);\r\n  \r\n      splideInstance.on(\"mounted\", () => {\r\n        splideInstance.go(selectedSlide);\r\n      });\r\n  \r\n      splideInstance.mount();\r\n  \r\n      return () => {\r\n        splideInstance.destroy();\r\n      };\r\n    }\r\n  }, [selectedSlide, setSplideInstance, autoplay]);\r\n\r\n  return (\r\n    <section id=\"vertical_thumbnail_carousel\" ref={splideRef} className=\"splide pb-2 pt-0.5 ssm:-mr-2 sm:mr-0\">\r\n      <div className=\"splide__track rounded-2xl\">\r\n        <ul className=\"splide__list\">\r\n          {photos.map((photo, slideIndex) => (\r\n            <li key={slideIndex} className={`splide__slide`} onContextMenu={(e) => e.preventDefault()}>\r\n              <img className=\"ssm:h-full sm:h-[380px] md:h-[385px] lg:h-[500px] xl:h-[600px] w-full object-cover duration-300 ease-out\" src={photo} alt={`Slide ${slideIndex}`} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default VerticalSlider;","//PreviewSliderVertical.tsx\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Splide } from \"@splidejs/splide\";\r\n\r\ninterface PreviewSliderVerticalProps {\r\n  photos: string[];\r\n  selectedSlide: number;\r\n  onPreviewClick: (index: number) => void;\r\n  getPerPageValue: () => number;\r\n}\r\n\r\nconst VerticalSliderPreview = ({ photos, selectedSlide, onPreviewClick, getPerPageValue }: PreviewSliderVerticalProps) => {\r\n  const previewSplideRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (previewSplideRef.current) {\r\n      const previewSplide = new Splide(previewSplideRef.current, {\r\n        type: \"slide\",\r\n        perPage: getPerPageValue(),\r\n        gap: 5,\r\n        rewind: true,\r\n        pagination: false,\r\n        focus: \"center\",\r\n      });\r\n\r\n      previewSplide.on(\"mounted\", () => {\r\n        const slides = previewSplideRef.current!.querySelectorAll(\".splide__slide\");\r\n        slides.forEach((slide, index) => {\r\n          slide.addEventListener(\"click\", () => {\r\n            onPreviewClick(index);\r\n          });\r\n        });\r\n      });\r\n\r\n      previewSplide.mount();\r\n\r\n      const handleResize = () => {\r\n        const newPerPage = getPerPageValue();\r\n        previewSplide.go(selectedSlide);\r\n        previewSplide.options.perPage = newPerPage;\r\n        previewSplide.refresh();\r\n      };\r\n\r\n      window.addEventListener(\"resize\", handleResize);\r\n\r\n      return () => {\r\n        window.removeEventListener(\"resize\", handleResize);\r\n        previewSplide.destroy();\r\n      };\r\n    }\r\n  }, [selectedSlide, getPerPageValue, onPreviewClick]);\r\n\r\n  return (\r\n    <section id=\"vertical_thumbnail_carousel_preview\" ref={previewSplideRef} className=\"splide ssm:-mr-2 sm:mr-0\">\r\n      <div className=\"splide__track\">\r\n        <ul className=\"splide__list\">\r\n          {photos.map((photo, previewIndex) => (\r\n            <li key={previewIndex} className={`splide__slide`} onClick={() => onPreviewClick(previewIndex)} onContextMenu={(e) => e.preventDefault()}>\r\n              <img className=\"ssm:h-[200px] sm:h-[160px] md:h-[155px] lg:h-[200px] w-full object-cover rounded-2xl\" src={photo} alt={`Preview ${previewIndex}`} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default VerticalSliderPreview;"],"names":["forwardRef","_","ref","t","useTranslation","selectedHorizontalSlide","useState","selectedVerticalSlide","splideInstanceRefHorizontal","useRef","splideInstanceRefVertical","slidersHorizontal","useMemo","photosessionsHorizontal","map","photo","img","filter","undefined","slidersVertical","photosessionsVertical","handleHorizontalPreviewClick","useCallback","index","current","go","handleVerticalPreviewClick","_jsx","children","_jsxs","SiteContainerBackground","id","concat","Title","text","className","VerticalSlider","photos","selectedSlide","setSplideInstance","splide","autoplay","VerticalSliderPreview","onPreviewClick","getPerPageValue","getPerVerticalPageValue","HorizontalSlider","HorizontalSliderPreview","getPerHorizontalPageValue","window","innerWidth","_ref","splideRef","useEffect","splideInstance","Splide","type","perPage","perMove","rewind","arrows","focus","pagination","interval","on","mount","destroy","slideIndex","onContextMenu","e","preventDefault","src","alt","previewSplideRef","previewSplide","gap","querySelectorAll","forEach","slide","addEventListener","handleResize","newPerPage","options","refresh","removeEventListener","previewIndex","onClick"],"sourceRoot":""}